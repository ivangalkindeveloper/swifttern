//
//  abstract_factory.swift
//  swifttern
//
//  Created by Иван Галкин on 13.01.2024.
//

//
// Абстрактная фабрика
// Паттерн, порождающий объекты
// Представляет собой интерфейс для созздания семейств взиамосвязанных или взаимозависимых объектов,
// не специфицируя их конкретных классов.
//
// Основные применения:
// - система не должна зависеть от того, как создаются, компонуются и представляются входящие в нее объекты;
// - система должна настраиватся одним из семейств объектов;
// - входящие в семейство взаимосвязанные объекты спроектированы для совместной работы, и вы должны
// обеспечить выполнение этого ограничения;
// - вы хотите предоставить библиотеку объектов, раскрывая только их интерфейсы, но не реализацию.
//
// Родственные паттерны:
// Классы асбтрактных фабрик часто реализуются фабричными методами, но могут быть реализованы
// с помощью паттерна Прототип.
//

// Абстрактная фабрика
// Объявляет интерфейс для операций, создающих абстрактные объекты-продукты
protocol AbstractFactory {
    AbstractProduct func createProductA();
    AbstractProduct func createProductB();
}

// Асбтрактный продукт
// объявляет интерфейс для типа объекта-продукта
protocol AbstractProduct {}

// Конкретная фабрика
// Реализует операции, создающие конкретые объекты-продукты
class ConcreteFactory: AbstractFactory {
    ConcreteProduct func createProductA() {};
    ConcreteProduct func createProductB() {};
}

// Кокнретный продукт
// Определяет объект-продукт, создаваемый соответствующей конкретной фабрикой
class ConcreteProduct: AbstractProduct {}
